// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/github.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SPbSTU.OPD.ASAP.Core.Presentation {
  public static partial class GithubService
  {
    static readonly string __ServiceName = "github_grpc.GithubService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest> __Marshaller_github_grpc_GetOrganizationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse> __Marshaller_github_grpc_GetOrganizationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest> __Marshaller_github_grpc_GetUsersToInviteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse> __Marshaller_github_grpc_GetUsersToInviteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest> __Marshaller_github_grpc_GetUsersToCreateRepositoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse> __Marshaller_github_grpc_GetUsersToCreateRepositoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest> __Marshaller_github_grpc_CreateRepositoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse> __Marshaller_github_grpc_CreateRepositoriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest> __Marshaller_github_grpc_MarkInvitedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse> __Marshaller_github_grpc_MarkInvitedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse> __Method_GetOrganizations = new grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizations",
        __Marshaller_github_grpc_GetOrganizationsRequest,
        __Marshaller_github_grpc_GetOrganizationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse> __Method_GetUsersToInvite = new grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsersToInvite",
        __Marshaller_github_grpc_GetUsersToInviteRequest,
        __Marshaller_github_grpc_GetUsersToInviteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse> __Method_GetUsersToCreateRepository = new grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsersToCreateRepository",
        __Marshaller_github_grpc_GetUsersToCreateRepositoryRequest,
        __Marshaller_github_grpc_GetUsersToCreateRepositoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse> __Method_CreateRepositories = new grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRepositories",
        __Marshaller_github_grpc_CreateRepositoriesRequest,
        __Marshaller_github_grpc_CreateRepositoriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse> __Method_MarkInvited = new grpc::Method<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkInvited",
        __Marshaller_github_grpc_MarkInvitedRequest,
        __Marshaller_github_grpc_MarkInvitedResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SPbSTU.OPD.ASAP.Core.Presentation.GithubReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GithubService</summary>
    [grpc::BindServiceMethod(typeof(GithubService), "BindService")]
    public abstract partial class GithubServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse> GetOrganizations(global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse> GetUsersToInvite(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse> GetUsersToCreateRepository(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse> CreateRepositories(global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse> MarkInvited(global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GithubService</summary>
    public partial class GithubServiceClient : grpc::ClientBase<GithubServiceClient>
    {
      /// <summary>Creates a new client for GithubService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GithubServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GithubService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GithubServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GithubServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GithubServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse GetOrganizations(global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse GetOrganizations(global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizations, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse> GetOrganizationsAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse> GetOrganizationsAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizations, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse GetUsersToInvite(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersToInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse GetUsersToInvite(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsersToInvite, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse> GetUsersToInviteAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersToInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse> GetUsersToInviteAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsersToInvite, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse GetUsersToCreateRepository(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersToCreateRepository(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse GetUsersToCreateRepository(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsersToCreateRepository, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse> GetUsersToCreateRepositoryAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersToCreateRepositoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse> GetUsersToCreateRepositoryAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsersToCreateRepository, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse CreateRepositories(global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRepositories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse CreateRepositories(global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRepositories, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse> CreateRepositoriesAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRepositoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse> CreateRepositoriesAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRepositories, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse MarkInvited(global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkInvited(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse MarkInvited(global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkInvited, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse> MarkInvitedAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkInvitedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse> MarkInvitedAsync(global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkInvited, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GithubServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GithubServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GithubServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOrganizations, serviceImpl.GetOrganizations)
          .AddMethod(__Method_GetUsersToInvite, serviceImpl.GetUsersToInvite)
          .AddMethod(__Method_GetUsersToCreateRepository, serviceImpl.GetUsersToCreateRepository)
          .AddMethod(__Method_CreateRepositories, serviceImpl.CreateRepositories)
          .AddMethod(__Method_MarkInvited, serviceImpl.MarkInvited).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GithubServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOrganizations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetOrganizationsResponse>(serviceImpl.GetOrganizations));
      serviceBinder.AddMethod(__Method_GetUsersToInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToInviteResponse>(serviceImpl.GetUsersToInvite));
      serviceBinder.AddMethod(__Method_GetUsersToCreateRepository, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.GetUsersToCreateRepositoryResponse>(serviceImpl.GetUsersToCreateRepository));
      serviceBinder.AddMethod(__Method_CreateRepositories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.CreateRepositoriesResponse>(serviceImpl.CreateRepositories));
      serviceBinder.AddMethod(__Method_MarkInvited, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedRequest, global::SPbSTU.OPD.ASAP.Core.Presentation.MarkInvitedResponse>(serviceImpl.MarkInvited));
    }

  }
}
#endregion
