package com.asap.opdasap;

import com.asap.opdasap.service.GitHubRepositoryService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@Component
@RequiredArgsConstructor
public class GithubOrchestrationJob {

    private final GithubGrpcClient githubGrpcClient;
    private final GitHubRepositoryService gitHubRepositoryService; // –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤

    private static final String ORGANIZATION = "my-org"; // –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ config

    @Scheduled(cron = "0 0 2 * * *") // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00 –Ω–æ—á–∏
    public void runDailyGithubSync() {
        log.info("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ GithubOrchestrationJob");

        // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞
        List<String> usersToInvite = githubGrpcClient.getUsersToInvite(ORGANIZATION);
        log.info("üîç –ü–æ–ª—É—á–µ–Ω—ã {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞", usersToInvite.size());

        if (!usersToInvite.isEmpty()) {
            githubGrpcClient.markInvited(usersToInvite);
            log.info("‚úÖ –ü–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ: {}", usersToInvite);
        }

        // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        List<String> usersToCreateRepos = githubGrpcClient.getUsersToCreateRepositories(ORGANIZATION, "Assignment 1");
        log.info("üì¶ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: {}", usersToCreateRepos.size());

        // 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        List<RepositoryInfo> createdRepos = gitHubRepositoryService.createRepositories(usersToCreateRepos, ORGANIZATION, "Assignment 1");
        log.info("‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —Å–æ–∑–¥–∞–Ω–æ: {}", createdRepos.size());

        // 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ gRPC
        githubGrpcClient.sendCreatedRepositories(createdRepos);
        log.info("üì¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏");
    }
}